name: Build and Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'NeoSharp/**'
      - '.github/workflows/build-and-test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'NeoSharp/**'
      - '.github/workflows/build-and-test.yml'

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['8.0.x']
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore
      working-directory: NeoSharp
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: NeoSharp
      
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"
      working-directory: NeoSharp
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: NeoSharp/**/test-results.trx
        retention-days: 7
        
    - name: Code coverage
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet test --configuration Release --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage
      working-directory: NeoSharp
      
    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        directory: ./NeoSharp/coverage
        fail_ci_if_error: false
        verbose: true