name: Publish to NuGet

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal
      
    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version to publish: $VERSION"
      
    - name: Pack NuGet package
      run: |
        dotnet pack src/NeoSharp/NeoSharp.csproj \
          --configuration Release \
          --no-build \
          --output ./artifacts \
          -p:PackageVersion=${{ steps.version.outputs.VERSION }}
      
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/*.nupkg \
          --api-key ${{ secrets.NUGET }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
        retention-days: 7
        
    - name: Create GitHub Release
      if: github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/*.nupkg
        tag_name: ${{ github.ref_name }}
        name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## NeoSharp v${{ steps.version.outputs.VERSION }}
          
          This release includes the NeoSharp SDK for Neo blockchain development.
          
          ### Installation
          ```bash
          dotnet add package NeoSharp --version ${{ steps.version.outputs.VERSION }}
          ```
          
          ### Package
          - [NeoSharp.${{ steps.version.outputs.VERSION }}.nupkg](https://www.nuget.org/packages/NeoSharp/${{ steps.version.outputs.VERSION }})
        draft: false
        prerelease: false